<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
          http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
        
    <camel:camelContext id="transactionlessJDBCCamelContext">
    	<camel:routeBuilder ref="transactionlessJDBCRouteBuilder"/>
    </camel:camelContext> 
    
    <bean id="transactionlessJDBCRouteBuilder" class="com.hedleyproctor.www.TransactionlessJDBCRouteBuilder">
    	<constructor-arg ref="customerDAO"></constructor-arg>
    	<constructor-arg ref="addressDAO"></constructor-arg>
    </bean>
    
    <bean id="customerDAO" class="com.hedleyproctor.www.CustomerDAO">
    	<constructor-arg ref="jdbcTemplate"></constructor-arg>
    </bean>
    
    <bean id="addressDAO" class="com.hedleyproctor.www.AddressDAO">
    	<constructor-arg ref="jdbcTemplate"></constructor-arg>
    </bean>
    
    <!-- Standard activemq setup. See http://camel.apache.org/activemq.html -->
    <bean id="jmsConnectionFactory" 
   		class="org.apache.activemq.ActiveMQConnectionFactory">
   		<property name="brokerURL" value="vm://localhost?broker.persistent=false" />
	</bean>

	<bean id="pooledConnectionFactory" 
	   class="org.apache.activemq.pool.PooledConnectionFactory" init-method="start" destroy-method="stop">
	   <property name="maxConnections" value="8" />
	   <property name="connectionFactory" ref="jmsConnectionFactory" />
	</bean>
	
	<bean id="jmsConfig" 
	   class="org.apache.camel.component.jms.JmsConfiguration">
	   <property name="connectionFactory" ref="pooledConnectionFactory"/>
	   <property name="concurrentConsumers" value="10"/>
	</bean>
	
	<bean id="activemq" 
	    class="org.apache.activemq.camel.component.ActiveMQComponent">
	    <property name="configuration" ref="jmsConfig"/>
	</bean>
	
	<!-- Not using connection pooling here, so we can use either the spring datasource  -->
	<!-- or the Apache commons one. If you wanted connection pooling, you would use the  -->
	<!-- Apache commons dbcp datasource. -->
	<!-- See e.g. http://static.springsource.org/spring/docs/3.0.x/reference/transaction.html -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem" />
		<property name="username" value="user" />
		<property name="password" value="password" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>
	   
          
</beans>          